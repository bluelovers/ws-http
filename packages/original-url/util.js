"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const url_1 = require("url");
const ip_regex_1 = require("ip-regex");
const re_v6 = ip_regex_1.v6({ exact: true });
/**
 * In case there's more than one header of a given name, we want the first one
 * as it should be the one that was added by the first proxy in the chain
 */
function getFirstHeader(req, header) {
    const value = req.headers[header];
    return (Array.isArray(value) ? value[0] : value).split(', ')[0];
}
exports.getFirstHeader = getFirstHeader;
function parsePartialURL(url) {
    const containsProtocol = url.indexOf('://') !== -1;
    const result = url_1.parse(containsProtocol ? url : 'invalid://' + url);
    if (!containsProtocol)
        result.protocol = '';
    return result;
}
exports.parsePartialURL = parsePartialURL;
function isIPv6(ip) {
    return re_v6.test(ip);
}
exports.isIPv6 = isIPv6;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbInV0aWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSw2QkFBd0M7QUFDeEMsdUNBQThCO0FBRTlCLE1BQU0sS0FBSyxHQUFHLGFBQUUsQ0FBQyxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDO0FBRWxDOzs7R0FHRztBQUNILFNBQWdCLGNBQWMsQ0FBQyxHQUU5QixFQUFFLE1BQWM7SUFFaEIsTUFBTSxLQUFLLEdBQUcsR0FBRyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQTtJQUNqQyxPQUFPLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUE7QUFDaEUsQ0FBQztBQU5ELHdDQU1DO0FBRUQsU0FBZ0IsZUFBZSxDQUFDLEdBQVc7SUFFMUMsTUFBTSxnQkFBZ0IsR0FBRyxHQUFHLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFBO0lBQ2xELE1BQU0sTUFBTSxHQUFHLFdBQVEsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxZQUFZLEdBQUcsR0FBRyxDQUFDLENBQUE7SUFDcEUsSUFBSSxDQUFDLGdCQUFnQjtRQUFFLE1BQU0sQ0FBQyxRQUFRLEdBQUcsRUFBRSxDQUFBO0lBQzNDLE9BQU8sTUFBTSxDQUFBO0FBQ2QsQ0FBQztBQU5ELDBDQU1DO0FBRUQsU0FBZ0IsTUFBTSxDQUFDLEVBQVU7SUFFaEMsT0FBTyxLQUFLLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFBO0FBQ3RCLENBQUM7QUFIRCx3QkFHQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHBhcnNlIGFzIHBhcnNlVXJsIH0gZnJvbSBcInVybFwiO1xuaW1wb3J0IHsgdjYgfSBmcm9tICdpcC1yZWdleCc7XG5cbmNvbnN0IHJlX3Y2ID0gdjYoeyBleGFjdDogdHJ1ZSB9KTtcblxuLyoqXG4gKiBJbiBjYXNlIHRoZXJlJ3MgbW9yZSB0aGFuIG9uZSBoZWFkZXIgb2YgYSBnaXZlbiBuYW1lLCB3ZSB3YW50IHRoZSBmaXJzdCBvbmVcbiAqIGFzIGl0IHNob3VsZCBiZSB0aGUgb25lIHRoYXQgd2FzIGFkZGVkIGJ5IHRoZSBmaXJzdCBwcm94eSBpbiB0aGUgY2hhaW5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldEZpcnN0SGVhZGVyKHJlcToge1xuXHRoZWFkZXJzOiBSZWNvcmQ8YW55LCBhbnk+XG59LCBoZWFkZXI6IHN0cmluZyk6IHN0cmluZ1xue1xuXHRjb25zdCB2YWx1ZSA9IHJlcS5oZWFkZXJzW2hlYWRlcl1cblx0cmV0dXJuIChBcnJheS5pc0FycmF5KHZhbHVlKSA/IHZhbHVlWzBdIDogdmFsdWUpLnNwbGl0KCcsICcpWzBdXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZVBhcnRpYWxVUkwodXJsOiBzdHJpbmcpXG57XG5cdGNvbnN0IGNvbnRhaW5zUHJvdG9jb2wgPSB1cmwuaW5kZXhPZignOi8vJykgIT09IC0xXG5cdGNvbnN0IHJlc3VsdCA9IHBhcnNlVXJsKGNvbnRhaW5zUHJvdG9jb2wgPyB1cmwgOiAnaW52YWxpZDovLycgKyB1cmwpXG5cdGlmICghY29udGFpbnNQcm90b2NvbCkgcmVzdWx0LnByb3RvY29sID0gJydcblx0cmV0dXJuIHJlc3VsdFxufVxuXG5leHBvcnQgZnVuY3Rpb24gaXNJUHY2KGlwOiBzdHJpbmcpXG57XG5cdHJldHVybiByZV92Ni50ZXN0KGlwKVxufVxuIl19