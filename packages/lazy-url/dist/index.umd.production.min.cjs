!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("url-parse"),require("util"),require("ts-type-predicates"),require("err-code"),require("replace-url-protocol"),require("err-indent"),require("err-stack-meta")):"function"==typeof define&&define.amd?define(["exports","url-parse","util","ts-type-predicates","err-code","replace-url-protocol","err-indent","err-stack-meta"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).index={},e.urlParse,e.util,e.tsTypePredicates,e.errcode,e.replaceUrlProtocol,e.errIndent,e.errStackMeta)}(this,(function(e,t,r,o,s,a,n,i){"use strict";function _interopDefaultLegacy(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var l=_interopDefaultLegacy(t),h=_interopDefaultLegacy(s);const u=Symbol("url"),p=Symbol("hidden");var c;e.ENUM_FAKE=void 0,(c=e.ENUM_FAKE||(e.ENUM_FAKE={})).protocol="fake+http:",c.hostname="url-fake-hostname";const f=findSymbolContext();class LazyURL extends URL{static create(e,t){return new this(e,t)}constructor(e,t){let r=_core(e,t);super(r.url.href),this[p]=r.hidden}get paths(){return null!=f&&this[f]&&Array.isArray(this[f].path)?this[f].path.slice():this.pathname.split("/").filter((e=>""!==e))}fakeExists(){return this.fakeKeys().length}fakeKeys(){return Object.keys(this[p])}fakeEntries(){return Object.entries(this[p])}toRealString(e){let t=this.fakeEntries();if(t.length){let r=l.default(this.href);if(t.forEach((([e,t])=>{r[e]===t&&r.set(e,"")})),""===r.host)if(null!=e&&e.ignoreInvalid)r.set("username",""),r.set("password",""),r.set("port",""),r.set("protocol","");else if(""!==r.username||""!==r.password||""!==r.port||""!==r.protocol)throw _wrapError(new TypeError("Invalid URL"),r);let o=r.toString(null==e?void 0:e.stringify);return""===r.protocol&&""===r.host&&(o=o.replace(/^\/\//,"")),o}return this.href}toString(){return this.href}get hostname(){return super.hostname}set hostname(e){isFakeHostname(e)||delete this[p].hostname,super.hostname=e}get href(){return super.href}set href(e){super.href=e,isFakeProtocol(super.protocol)&&(this[p].protocol="fake+http:"),isFakeHostname(super.hostname)&&(this[p].hostname="url-fake-hostname")}get origin(){let e=super.origin;return null!=e&&"null"!==e&&"undefined"!==e||!super.protocol.length||(e=super.protocol+"//"+super.hostname),e}get port(){return super.port}set port(e){var t;if("string"==typeof e&&""!==e){let t=e.toString().trim();if(t!==(e=parseInt(e)).toString())throw new TypeError(`Invalid port input: { '${t}' => ${e} }`)}if("number"==typeof e){if(Number.isNaN(e)||!Number.isFinite(e)||e<0||e>65535)throw new RangeError(`Invalid port range: ${e}`);e=e.toString()}super.port=null!==(t=e)&&void 0!==t?t:""}get protocol(){return super.protocol}set protocol(e){if("string"!=typeof e||e.length<2||!e.endsWith(":"))throw new TypeError(`Invalid protocol input: ${e}`);isFakeProtocol(e)||delete this[p].protocol;const t=super.protocol;t!==e&&(super.protocol=e,a._fixReplaceURLProtocol(this,t,e))}get auth(){var e,t;return null!==(e=this.username)&&void 0!==e&&e.length?`${this.username}:${null!==(t=this.password)&&void 0!==t?t:""}`:""}set auth(e){this.username="",this.password="";let t=null==e?void 0:e.split(":");null!=t&&t.length&&(this.username=t.shift(),this.password=t.join(":"))}get scheme(){return this.protocol}set scheme(e){this.protocol=e}get fragment(){return this.hash}set fragment(e){this.hash=e}get query(){return this.search}set query(e){this.search=e}toObject(){return LazyURL.toObject(this)}static toObject(e){return LazyURL.keys().reduce(((t,r)=>(t[r]="searchParams"===r?new URLSearchParams(e.searchParams.entries()):e[r],t)),{})}keys(){return LazyURL.keys()}values(){return LazyURL.values(this)}entries(){return LazyURL.entries(this)}static keys(){return["href","protocol","username","password","host","hostname","port","pathname","search","searchParams","hash"]}static values(e){return LazyURL.keys().map((t=>e[t]))}static entries(e){return LazyURL.keys().map((t=>[t,e[t]]))}createURLSearchParams(e){return e instanceof URL&&(e=e.searchParams),new URLSearchParams(e)}set(e,t){this[e]=t}get(e){return this[e]}}function findSymbolContext(){let e=_newURL("https://localhost");return Object.getOwnPropertySymbols(e).filter((t=>"localhost"==e[t].host))[0]}function _core(e,t){if(Array.isArray(e)&&null==t&&([e,t]=e),null!=e)if(e instanceof LazyURL)e=e.toRealString();else if(e instanceof URL)e=e.href;else if("string"==typeof e.href){var s;e=e.href,null!==(s=t)&&void 0!==s||(t=e.baseURI)}if("string"!=typeof e)throw _wrapError(new TypeError(`Argument '${r.inspect(e)}' is not assignable to url like.`),e,t);let a;const n={};"string"!=typeof t&&null!=t&&"string"==typeof t.href&&(t=t.href),""===t&&(t=void 0);try{a=_newURL(e,t)}catch(r){let s;if(o.typePredicates(r),"ERR_INVALID_URL"===r.code||/Invalid URL/.test(r.message))if("string"==typeof t){let r=t,o=l.default(t);""!==o.host&&""!==o.protocol||(!r.includes("/")&&[o.protocol+o.host,o.protocol+o.pathname].includes(r.toLowerCase())&&(o=l.default(""),o.set("host",r),o.set("protocol","fake+http:"),o.set("pathname",""),n.protocol="fake+http:"),""===o.host&&(""==o.pathname||o.pathname.includes("/")?(o.set("host","url-fake-hostname"),n.hostname=o.hostname):(o.set("host",o.pathname),o.set("pathname",""))),""===o.protocol&&(o.set("protocol","fake+http:"),n.protocol=o.protocol),""===o.pathname||o.pathname.startsWith("/")||o.set("pathname","/"+o.pathname),a=_newURL(e,o.toString()),s=!0)}else(null!=e&&""!==e||null!=t)&&null!=e&&null==t&&(a=_newURL(e,t="fake+http://url-fake-hostname"),n.protocol="fake+http:",n.hostname="url-fake-hostname",s=!0);if(!s)throw r}return{url:a,hidden:n}}function _wrapError(e,t,r,s){var a;o.typePredicates(e);let l=e.message;if("Invalid URL"===l||"ERR_INVALID_URL"===e.code||s){l=n.messageWithSubErrors(e,[e,{input:t,baseURL:r}]);let o=i.errStackMeta(e);e.stack=n.errorsToMessageList([e,{input:t,baseURL:r}],{},e).concat([o.stack]).join("\n")}return e.message!==l&&(e.message=l),h.default(e,null!==(a=e.code)&&void 0!==a?a:"ERR_INVALID_URL",{input:t,baseURL:r})}function _newURL(e,t){try{return new URL(e,t)}catch(r){throw _wrapError(r,e,t)}}function isFakeProtocol(e){return"fake+http:"===e}function isFakeHostname(e){return"url-fake-hostname"===e}e.LazyURL=LazyURL,e.SYM_HIDDEN=p,e.SYM_URL=u,e._core=_core,e.default=LazyURL,e.findSymbolContext=findSymbolContext,e.isFakeHostname=isFakeHostname,e.isFakeProtocol=isFakeProtocol,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=index.umd.production.min.cjs.map
