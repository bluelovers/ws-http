"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("url-parse"),t=require("util"),r=require("ts-type-predicates"),s=require("err-code"),o=require("replace-url-protocol"),a=require("err-indent"),n=require("err-stack-meta");function _interopDefaultLegacy(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var i=_interopDefaultLegacy(e),l=_interopDefaultLegacy(s);const h=Symbol("url"),u=Symbol("hidden");var p;exports.ENUM_FAKE=void 0,(p=exports.ENUM_FAKE||(exports.ENUM_FAKE={})).protocol="fake+http:",p.hostname="url-fake-hostname";const c=findSymbolContext();class LazyURL extends URL{static create(e,t){return new this(e,t)}constructor(e,t){let r=_core(e,t);super(r.url.href),this[u]=r.hidden}get paths(){return null!=c&&this[c]&&Array.isArray(this[c].path)?this[c].path.slice():this.pathname.split("/").filter((e=>""!==e))}fakeExists(){return this.fakeKeys().length}fakeKeys(){return Object.keys(this[u])}fakeEntries(){return Object.entries(this[u])}toRealString(e){let t=this.fakeEntries();if(t.length){let r=i.default(this.href);if(t.forEach((([e,t])=>{r[e]===t&&r.set(e,"")})),""===r.host)if(null!=e&&e.ignoreInvalid)r.set("username",""),r.set("password",""),r.set("port",""),r.set("protocol","");else if(""!==r.username||""!==r.password||""!==r.port||""!==r.protocol)throw _wrapError(new TypeError("Invalid URL"),r);let s=r.toString(null==e?void 0:e.stringify);return""===r.protocol&&""===r.host&&(s=s.replace(/^\/\//,"")),s}return this.href}toString(){return this.href}get hostname(){return super.hostname}set hostname(e){isFakeHostname(e)||delete this[u].hostname,super.hostname=e}get href(){return super.href}set href(e){super.href=e,isFakeProtocol(super.protocol)&&(this[u].protocol="fake+http:"),isFakeHostname(super.hostname)&&(this[u].hostname="url-fake-hostname")}get origin(){let e=super.origin;return null!=e&&"null"!==e&&"undefined"!==e||!super.protocol.length||(e=super.protocol+"//"+super.hostname),e}get port(){return super.port}set port(e){var t;if("string"==typeof e&&""!==e){let t=e.toString().trim();if(t!==(e=parseInt(e)).toString())throw new TypeError(`Invalid port input: { '${t}' => ${e} }`)}if("number"==typeof e){if(Number.isNaN(e)||!Number.isFinite(e)||e<0||e>65535)throw new RangeError(`Invalid port range: ${e}`);e=e.toString()}super.port=null!==(t=e)&&void 0!==t?t:""}get protocol(){return super.protocol}set protocol(e){if("string"!=typeof e||e.length<2||!e.endsWith(":"))throw new TypeError(`Invalid protocol input: ${e}`);isFakeProtocol(e)||delete this[u].protocol;const t=super.protocol;t!==e&&(super.protocol=e,o._fixReplaceURLProtocol(this,t,e))}get auth(){var e,t;return null!==(e=this.username)&&void 0!==e&&e.length?`${this.username}:${null!==(t=this.password)&&void 0!==t?t:""}`:""}set auth(e){this.username="",this.password="";let t=null==e?void 0:e.split(":");null!=t&&t.length&&(this.username=t.shift(),this.password=t.join(":"))}get scheme(){return this.protocol}set scheme(e){this.protocol=e}get fragment(){return this.hash}set fragment(e){this.hash=e}get query(){return this.search}set query(e){this.search=e}toObject(){return LazyURL.toObject(this)}static toObject(e){return LazyURL.keys().reduce(((t,r)=>(t[r]="searchParams"===r?new URLSearchParams(e.searchParams.entries()):e[r],t)),{})}keys(){return LazyURL.keys()}values(){return LazyURL.values(this)}entries(){return LazyURL.entries(this)}static keys(){return["href","protocol","username","password","host","hostname","port","pathname","search","searchParams","hash"]}static values(e){return LazyURL.keys().map((t=>e[t]))}static entries(e){return LazyURL.keys().map((t=>[t,e[t]]))}createURLSearchParams(e){return e instanceof URL&&(e=e.searchParams),new URLSearchParams(e)}set(e,t){this[e]=t}get(e){return this[e]}}function findSymbolContext(){let e=_newURL("https://localhost");return Object.getOwnPropertySymbols(e).filter((t=>"localhost"==e[t].host))[0]}function _core(e,s){if(Array.isArray(e)&&null==s&&([e,s]=e),null!=e)if(e instanceof LazyURL)e=e.toRealString();else if(e instanceof URL)e=e.href;else if("string"==typeof e.href){var o;e=e.href,null!==(o=s)&&void 0!==o||(s=e.baseURI)}if("string"!=typeof e)throw _wrapError(new TypeError(`Argument '${t.inspect(e)}' is not assignable to url like.`),e,s);let a;const n={};"string"!=typeof s&&null!=s&&"string"==typeof s.href&&(s=s.href),""===s&&(s=void 0);try{a=_newURL(e,s)}catch(t){let o;if(r.typePredicates(t),"ERR_INVALID_URL"===t.code||/Invalid URL/.test(t.message))if("string"==typeof s){let t=s,r=i.default(s);""!==r.host&&""!==r.protocol||(!t.includes("/")&&[r.protocol+r.host,r.protocol+r.pathname].includes(t.toLowerCase())&&(r=i.default(""),r.set("host",t),r.set("protocol","fake+http:"),r.set("pathname",""),n.protocol="fake+http:"),""===r.host&&(""==r.pathname||r.pathname.includes("/")?(r.set("host","url-fake-hostname"),n.hostname=r.hostname):(r.set("host",r.pathname),r.set("pathname",""))),""===r.protocol&&(r.set("protocol","fake+http:"),n.protocol=r.protocol),""===r.pathname||r.pathname.startsWith("/")||r.set("pathname","/"+r.pathname),a=_newURL(e,r.toString()),o=!0)}else(null!=e&&""!==e||null!=s)&&null!=e&&null==s&&(a=_newURL(e,s="fake+http://url-fake-hostname"),n.protocol="fake+http:",n.hostname="url-fake-hostname",o=!0);if(!o)throw t}return{url:a,hidden:n}}function _wrapError(e,t,s,o){var i;r.typePredicates(e);let h=e.message;if("Invalid URL"===h||"ERR_INVALID_URL"===e.code||o){h=a.messageWithSubErrors(e,[e,{input:t,baseURL:s}]);let r=n.errStackMeta(e);e.stack=a.errorsToMessageList([e,{input:t,baseURL:s}],{},e).concat([r.stack]).join("\n")}return e.message!==h&&(e.message=h),l.default(e,null!==(i=e.code)&&void 0!==i?i:"ERR_INVALID_URL",{input:t,baseURL:s})}function _newURL(e,t){try{return new URL(e,t)}catch(r){throw _wrapError(r,e,t)}}function isFakeProtocol(e){return"fake+http:"===e}function isFakeHostname(e){return"url-fake-hostname"===e}exports.LazyURL=LazyURL,exports.SYM_HIDDEN=u,exports.SYM_URL=h,exports._core=_core,exports.default=LazyURL,exports.findSymbolContext=findSymbolContext,exports.isFakeHostname=isFakeHostname,exports.isFakeProtocol=isFakeProtocol;
//# sourceMappingURL=index.cjs.production.min.cjs.map
